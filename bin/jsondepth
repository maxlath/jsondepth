#!/usr/bin/env node
var inspect = require('util').inspect
var get = require('lodash.get')
var args = process.argv.slice(2)

var helpers = require('../lib/helpers')

if (args.length === 2) {
  var path = args[0]
  var depth = parseInt(args[1])
} else if (args.length === 1) {
  if (/^-?\d+$/.test(args[0])) {
    var path = ''
    var depth = parseInt(args[0])
  } else {
    var path = args[0]
    var depth = 0
  }
} else if (args.length === 0) {
  var path = ''
  var depth = 0
} else {
  throw new Error('too many arguments')
}

var data = ''

function append (buf) {Â data += buf.toString() }

function log () {
  try {
    var obj = JSON.parse(data)
  } catch (error) {
    console.error("couldn't parse JSON", error)
    process.exit(1)
  }

  var parsedPath = helpers.parsePath(path)
  path = parsedPath[0]
  specialKey = parsedPath[1]

  if (path !== '') {
    obj = get(obj, path)
  }

  if (depth === -1) {
    depth = Infinity
  }

  if (specialKey) {
    obj = helpers.getSpecialValue(obj, specialKey)
  }

  // avoid colorizing when stdout isn' the terminal
  var colorize = process.stdout.isTTY

  if (typeof obj === 'string') {
    console.log(obj)
  } else {
    // inspect params: Object, showHidden, depth, colorize
    console.log(inspect(obj, false, depth, colorize))
  }
  process.exit(0)
}

process.stdin
.on('data', append)
.on('end', log)
